
CSS
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

JS BUNDLE
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

STARTER TEMPLATE
<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <title>Hello, world!</title>
  </head>
  <body>
    <h1>Hello, world!</h1>

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

    <!-- Option 2: Separate Popper and Bootstrap JS -->
    <!--
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
    -->
  </body>
</html>


After creating repository in git
1)remove origin
git remote rm origin
2)Insert following commands after creating folder
e.g.â€¦or push an existing repository from the command line
git remote add origin https://github.com/AshishChodankar/HelloReacTest.git
git branch -M main
git push -u origin main


React
1. create project
npx create-react-app hello-react 

2.
npm start

3.Bootstrap add in react
i)install bootstrap in node terminal=>
npm install react-bootstrap bootstrap@5.1.3

ii)Include following statement in App.js
import 'bootstrap/dist/css/bootstrap.min.css';

4. to send react database 
npm install axios


Node Express js
1.Package.jason file create syntax:
npm init

2.Install express syntax:

npm install express

MySQL
1.MySQL install in NodeJS=>
$ npm install mysql

2.bluebird install in NodeJS =>
npm install bluebird

3.we don't have to open browser again and again
npm install nodemon

4.Above also write "start": "nodemon src/main.js" in package.jason scripts

5.
npm install cors

6.when you use cors write
// CROSS ORIGIN REQUEST ENABLING.
const cors = require("cors");
app.use(cors());

3.Database interaction first lines
i)link- http://bluebirdjs.com/docs/api/promisification.html
// The most popular mysql module
ii)var Promise = require("bluebird");
// Note that the library's classes are not properties of the main export
// so we require and promisifyAll them manually
Promise.promisifyAll(require("mysql/lib/Connection").prototype);
Promise.promisifyAll(require("mysql/lib/Pool").prototype);

4.in case still you are getting errors use
npm install mysql2
